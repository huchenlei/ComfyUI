name: "Release Stable Version"

on:
  pull_request:
    branches:
      - master
      - main
    paths:
      - "pyproject.toml"

jobs:
  package_comfy_windows:
    permissions:
      contents: "write"
      packages: "write"
      pull-requests: "read"
    runs-on: windows-latest
    if: >
      contains(github.event.pull_request.labels.*.name, 'Release')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      # Read metadata from pyproject.toml
      - name: Read metadata from pyproject.toml
        run: |
          python -c '
          import tomllib
          import os
          with open("pyproject.toml", "rb") as f:
              config = tomllib.load(f)
              version = config["project"]["version"]
              metadata = config["tool"]["stable-release"]

              # Extract ComfyUI version
              metadata["comfyui-version"] = version

              # Extract Python version components
              python_version = metadata.get("python-version", "3.11")
              major, minor = python_version.split(".")[:2]
              metadata["python-minor"] = minor

              # Write all metadata to environment
              for key, value in metadata.items():
                  env_key = key.replace("-", "_")
                  print(f"{env_key}={value}", file=open(os.environ["GITHUB_ENV"], "a"))
          '
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: |
            cu${{ env.cuda_version }}_python_deps.tar
            update_comfyui_and_python_dependencies.bat
          key: ${{ runner.os }}-build-cu${{ env.cuda_version }}-${{ env.python_minor }}
      - shell: bash
        run: |
          mv cu${{ env.cuda_version }}_python_deps.tar ../
          mv update_comfyui_and_python_dependencies.bat ../
          cd ..
          tar xf cu${{ env.cuda_version }}_python_deps.tar
          pwd
          ls

      - shell: bash
        run: |
          cd ..
          cp -r ComfyUI ComfyUI_copy
          curl https://www.python.org/ftp/python/{{ env.python_version }}/python-{{ env.python_version }}-embed-amd64.zip -o python_embeded.zip
          unzip python_embeded.zip -d python_embeded
          cd python_embeded
          echo ${{ env.MINOR_VERSION }}
          echo 'import site' >> ./python3${{ env.python_minor }}._pth
          curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
          ./python.exe get-pip.py
          ./python.exe -s -m pip install ../cu${{ env.cuda_version }}_python_deps/*
            sed -i '1i../ComfyUI' ./python3${{ env.python_minor }}._pth
            cd ..

          git clone --depth 1 https://github.com/comfyanonymous/taesd
          cp taesd/*.pth ./ComfyUI_copy/models/vae_approx/

          mkdir ComfyUI_windows_portable
          mv python_embeded ComfyUI_windows_portable
          mv ComfyUI_copy ComfyUI_windows_portable/ComfyUI

          cd ComfyUI_windows_portable

          mkdir update
          cp -r ComfyUI/.ci/update_windows/* ./update/
          cp -r ComfyUI/.ci/windows_base_files/* ./
          cp ../update_comfyui_and_python_dependencies.bat ./update/

          cd ..

          "C:\Program Files\7-Zip\7z.exe" a -t7z -m0=lzma2 -mx=8 -mfb=64 -md=32m -ms=on -mf=BCJ2 ComfyUI_windows_portable.7z ComfyUI_windows_portable
          mv ComfyUI_windows_portable.7z ComfyUI/ComfyUI_windows_portable_nvidia.7z

          cd ComfyUI_windows_portable
          python_embeded/python.exe -s ComfyUI/main.py --quick-test-for-ci --cpu

          ls

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ComfyUI_windows_portable_nvidia.7z
          tag_name: v${{ env.comfyui_version }}
          draft: true
          prerelease: true
          make_latest: false
